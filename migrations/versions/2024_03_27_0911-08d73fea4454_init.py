"""init

Revision ID: 08d73fea4454
Revises:
Create Date: 2024-03-27 09:11:30.990563

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# if `import sqlmodel` only, still work, but the generated migration python file cannot hightlight `sqlmodel.sql.sqltypes`
# https://github.com/tiangolo/full-stack-fastapi-template/blob/master/backend/app/alembic/script.py.mako#L10
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = "08d73fea4454"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tag",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("uid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("uid", name=op.f("pk_tag")),
    )
    op.create_index(op.f("ix_tag_id"), "tag", ["id"], unique=True)
    op.create_index(op.f("ix_tag_name"), "tag", ["name"], unique=True)
    op.create_table(
        "team",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("headquarters", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("uid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("uid", name=op.f("pk_team")),
    )
    op.create_index(op.f("ix_team_id"), "team", ["id"], unique=True)
    op.create_index(op.f("ix_team_name"), "team", ["name"], unique=True)
    op.create_table(
        "tag_team_link",
        sa.Column("tag_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("team_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.id"], name=op.f("fk_tag_team_link_tag_id_tag")
        ),
        sa.ForeignKeyConstraint(
            ["team_id"], ["team.id"], name=op.f("fk_tag_team_link_team_id_team")
        ),
        sa.PrimaryKeyConstraint("tag_id", "team_id", name=op.f("pk_tag_team_link")),
    )
    op.create_table(
        "user",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("uid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("team_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"], ["team.id"], name=op.f("fk_user_team_id_team")
        ),
        sa.PrimaryKeyConstraint("uid", name=op.f("pk_user")),
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=True)
    op.create_index(op.f("ix_user_name"), "user", ["name"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_name"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_table("tag_team_link")
    op.drop_index(op.f("ix_team_name"), table_name="team")
    op.drop_index(op.f("ix_team_id"), table_name="team")
    op.drop_table("team")
    op.drop_index(op.f("ix_tag_name"), table_name="tag")
    op.drop_index(op.f("ix_tag_id"), table_name="tag")
    op.drop_table("tag")
    # ### end Alembic commands ###

# docker compose build
# docker compose up -d
# docker compose logs -f
# docker container inspect fastapi-demo-api-1
# docker ps -aq | xargs docker rm -f && docker images -q | xargs docker rmi -f

# rabbitmq http://localhost:15672/
# celery flower: http://localhost:5555/
# api: http://localhost:8000/docs

secrets:
  PIP_INDEX_URL:
    file: PIP_INDEX_URL.secret

services:
  # docker run --rm -d \
  #   --name rabbitmq \
  #   -p 5672:5672 \
  #   -p 15672:15672 \
  #   -e RABBITMQ_DEFAULT_VHOST=fastapi-demo-local \
  #   -e RABBITMQ_DEFAULT_USER=guest \
  #   -e RABBITMQ_DEFAULT_PASS=guest \
  #   rabbitmq:3-management-alpine
  rabbitmq:
    container_name: fastapi-demo-rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      # ! password for test only
      RABBITMQ_DEFAULT_VHOST: fastapi-demo-local
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # docker run --rm -d --name redis -p 6379:6379 redis:alpine
  redis:
    container_name: fastapi-demo-redis
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"

  api:
    container_name: fastapi-demo-api
    build:
      context: .
      args:
        app_version: "0.0.0"
    image: api-full
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - redis

  celery_worker_queue_low:
    container_name: fastapi-demo-celery_worker_queue_low
    build:
      context: .
      args:
        # ! must specify the same version as the api container, because we're using the same image
        app_version: "0.0.0"
    image: api-full
    command: celery -A app.core.celery worker --hostname=worker_q_lower_1 --loglevel=info -Q low
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - api

  celery_worker_queue_high_1:
    container_name: fastapi-demo-celery_worker_queue_high_1
    build:
      context: .
      args:
        # ! must specify the same version as the api container, because we're using the same image
        app_version: "0.0.0"
    image: api-full
    command: celery -A app.core.celery worker --hostname=worker_q_high_1 --loglevel=info -Q high
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - api

  celery_worker_queue_high_2:
    container_name: fastapi-demo-celery_worker_queue_high_2
    build:
      context: .
      args:
        # ! must specify the same version as the api container, because we're using the same image
        app_version: "0.0.0"
    image: api-full
    command: celery -A app.core.celery worker --hostname=worker_q_high_2 --loglevel=info -Q high
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - api

  celery_flower:
    container_name: fastapi-demo-celery_flower
    build:
      context: .
      args:
        app_version: "0.0.0"
    image: api-full
    command: celery -A app.core.celery flower --loglevel=info
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - api

  celery_beat:
    container_name: fastapi-demo-celery_beat
    build:
      context: .
      args:
        app_version: "0.0.0"
    image: api-full
    command: celery -A app.core.celery beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - api

  taskiq_worker_queue_low:
    container_name: fastapi-demo-taskiq_worker_queue_low
    build:
      context: .
      args:
        # ! must specify the same version as the api container, because we're using the same image
        app_version: "0.0.0"
    image: api-full
    command: taskiq worker app.core.taskiq:taskiq_broker
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - api
